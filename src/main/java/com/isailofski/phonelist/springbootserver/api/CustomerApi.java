/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.isailofski.phonelist.springbootserver.api;

import com.isailofski.phonelist.springbootserver.model.PostCustomerListRequestDto;
import com.isailofski.phonelist.springbootserver.model.PostCustomerListResponseDto;
import com.isailofski.phonelist.springbootserver.model.PutCustomerDetailsRequestDto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-03-08T13:47:25.649846+11:00[Australia/Melbourne]")

@Validated
@Api(value = "customer", description = "the customer API")
public interface CustomerApi {

    default CustomerApiDelegate getDelegate() {
        return new CustomerApiDelegate() {
        };
    }

    /**
     * POST /customer : Create one or more phone customers
     *
     * @param postCustomerListRequestDto (optional)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Create one or more phone customers", nickname = "postNewCustomer", notes = "", response = PostCustomerListResponseDto.class, tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = PostCustomerListResponseDto.class) })
    @RequestMapping(value = "/customer", produces = { "application/json" }, consumes = {
            "application/json" }, method = RequestMethod.POST)
    default ResponseEntity<PostCustomerListResponseDto> postNewCustomer(
            @ApiParam(value = "") @Valid @RequestBody(required = false) PostCustomerListRequestDto postCustomerListRequestDto) {
        return getDelegate().postNewCustomer(postCustomerListRequestDto);
    }

    /**
     * PUT /customer/{customerId} : Update one or more customer&#39;s details
     *
     * @param putCustomerDetailsRequestDto User details for update to the database
     *                                     are here (required)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Update one or more customer's details", nickname = "putUpdateCustomer", notes = "", response = String.class, tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = String.class) })
    @RequestMapping(value = "/customer/{customerId}", produces = { "application/json" }, consumes = {
            "application/json" }, method = RequestMethod.PUT)
    default ResponseEntity<String> putUpdateCustomer(
            @ApiParam(value = "User details for update to the database are here", required = true) @Valid @RequestBody PutCustomerDetailsRequestDto putCustomerDetailsRequestDto) {
        return getDelegate().putUpdateCustomer(putCustomerDetailsRequestDto);
    }

}
