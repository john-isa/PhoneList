/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.isailofski.phonelist.springbootserver.api;

import com.isailofski.phonelist.springbootserver.model.GetPhoneListByCustomerResponseDto;
import com.isailofski.phonelist.springbootserver.model.GetPhoneNumbersResponseDto;
import com.isailofski.phonelist.springbootserver.model.PostPhoneNumberListRequestDto;
import com.isailofski.phonelist.springbootserver.model.PostPhoneNumberListResponseDto;
import com.isailofski.phonelist.springbootserver.model.PutPhoneNumberListRequestDto;
import com.isailofski.phonelist.springbootserver.model.PutPhoneNumberListResponseDto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-03-08T13:47:25.649846+11:00[Australia/Melbourne]")

@Validated
@Api(value = "phonenumber", description = "the phonenumber API")
public interface PhonenumberApi {

    default PhonenumberApiDelegate getDelegate() {
        return new PhonenumberApiDelegate() {
        };
    }

    /**
     * GET /phonenumber/{customerId} : Retrieve all phone numbers attached to a
     * customer
     *
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Retrieve all phone numbers attached to a customer", nickname = "getPhoneNumberByCustomer", notes = "", response = GetPhoneListByCustomerResponseDto.class, tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = GetPhoneListByCustomerResponseDto.class) })
    @RequestMapping(value = "/phonenumber/{customerId}", produces = { "application/json" }, method = RequestMethod.GET)
    default ResponseEntity<GetPhoneListByCustomerResponseDto> getPhoneNumberByCustomer() {
        return getDelegate().getPhoneNumberByCustomer();
    }

    /**
     * GET /phonenumber : Retrieve all phone numbers
     *
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Retrieve all phone numbers", nickname = "getPhoneNumbers", notes = "", response = GetPhoneNumbersResponseDto.class, tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = GetPhoneNumbersResponseDto.class) })
    @RequestMapping(value = "/phonenumber", produces = { "application/json" }, method = RequestMethod.GET)
    default ResponseEntity<GetPhoneNumbersResponseDto> getPhoneNumbers() {
        return getDelegate().getPhoneNumbers();
    }

    /**
     * POST /phonenumber : Create one or more new phone numbers
     *
     * @param postPhoneNumberListRequestDto (required)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Create one or more new phone numbers", nickname = "postPhoneNumber", notes = "", response = PostPhoneNumberListResponseDto.class, tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = PostPhoneNumberListResponseDto.class) })
    @RequestMapping(value = "/phonenumber", produces = { "application/json" }, consumes = {
            "application/json" }, method = RequestMethod.POST)
    default ResponseEntity<PostPhoneNumberListResponseDto> postPhoneNumber(
            @ApiParam(value = "", required = true) @Valid @RequestBody PostPhoneNumberListRequestDto postPhoneNumberListRequestDto) {
        return getDelegate().postPhoneNumber(postPhoneNumberListRequestDto);
    }

    /**
     * PUT /phonenumber : Activate phone number(s) and attach to a customer
     *
     * @param putPhoneNumberListRequestDto (required)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Activate phone number(s) and attach to a customer", nickname = "putPhoneNumberByCustomer", notes = "", response = PutPhoneNumberListResponseDto.class, tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = PutPhoneNumberListResponseDto.class) })
    @RequestMapping(value = "/phonenumber", produces = { "application/json" }, consumes = {
            "application/json" }, method = RequestMethod.PUT)
    default ResponseEntity<PutPhoneNumberListResponseDto> putPhoneNumberByCustomer(
            @ApiParam(value = "", required = true) @Valid @RequestBody PutPhoneNumberListRequestDto putPhoneNumberListRequestDto) {
        return getDelegate().putPhoneNumberByCustomer(putPhoneNumberListRequestDto);
    }

}
