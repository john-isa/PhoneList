/*
 * Customer Phone List
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: john.isailofski@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.isailofski.phonelist.api;

import com.isailofski.phonelist.springbootclient.model.GetPhoneListByCustomerResponseDto;
import com.isailofski.phonelist.springbootclient.model.GetPhoneNumbersResponseDto;
import com.isailofski.phonelist.springbootclient.model.PostCustomerListRequestDto;
import com.isailofski.phonelist.springbootclient.model.PostCustomerListResponseDto;
import com.isailofski.phonelist.springbootclient.model.PostPhoneNumberListRequestDto;
import com.isailofski.phonelist.springbootclient.model.PostPhoneNumberListResponseDto;
import com.isailofski.phonelist.springbootclient.model.PutCustomerDetailsRequestDto;
import com.isailofski.phonelist.springbootclient.model.PutPhoneNumberListRequestDto;
import com.isailofski.phonelist.springbootclient.model.PutPhoneNumberListResponseDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Retrieve all phone numbers attached to a customer
     *
     * 
     *
     * @throws ApiException
     *                      if the Api call fails
     */
    @Test
    public void getPhoneNumberByCustomerTest() {
        GetPhoneListByCustomerResponseDto response = api.getPhoneNumberByCustomer();

        // TODO: test validations
    }

    /**
     * Retrieve all phone numbers
     *
     * 
     *
     * @throws ApiException
     *                      if the Api call fails
     */
    @Test
    public void getPhoneNumbersTest() {
        GetPhoneNumbersResponseDto response = api.getPhoneNumbers();

        // TODO: test validations
    }

    /**
     * Create one or more phone customers
     *
     * 
     *
     * @throws ApiException
     *                      if the Api call fails
     */
    @Test
    public void postNewCustomerTest() {
        PostCustomerListRequestDto postCustomerListRequestDto = null;
        PostCustomerListResponseDto response = api.postNewCustomer(postCustomerListRequestDto);

        // TODO: test validations
    }

    /**
     * Create one or more new phone numbers
     *
     * 
     *
     * @throws ApiException
     *                      if the Api call fails
     */
    @Test
    public void postPhoneNumberTest() {
        PostPhoneNumberListRequestDto postPhoneNumberListRequestDto = null;
        PostPhoneNumberListResponseDto response = api.postPhoneNumber(postPhoneNumberListRequestDto);

        // TODO: test validations
    }

    /**
     * Activate phone number(s) and attach to a customer
     *
     * 
     *
     * @throws ApiException
     *                      if the Api call fails
     */
    @Test
    public void putPhoneNumberByCustomerTest() {
        PutPhoneNumberListRequestDto putPhoneNumberListRequestDto = null;
        PutPhoneNumberListResponseDto response = api.putPhoneNumberByCustomer(putPhoneNumberListRequestDto);

        // TODO: test validations
    }

    /**
     * Update one or more customer&#39;s details
     *
     * 
     *
     * @throws ApiException
     *                      if the Api call fails
     */
    @Test
    public void putUpdateCustomerTest() {
        PutCustomerDetailsRequestDto putCustomerDetailsRequestDto = null;
        String response = api.putUpdateCustomer(putCustomerDetailsRequestDto);

        // TODO: test validations
    }

}
